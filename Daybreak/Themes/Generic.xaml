<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:buttons="clr-namespace:Daybreak.Controls.Buttons"
    xmlns:conv="clr-namespace:Daybreak.Shared.Converters;assembly=Daybreak.Shared"
    xmlns:glyphs="clr-namespace:Daybreak.Controls.Glyphs"
    xmlns:local="clr-namespace:Daybreak.Controls"
    xmlns:ui="http://schemas.lepo.co/wpfui/2022/xaml">
    <conv:BooleanToVisibilityConverter x:Key="InverseBooleanToVisibilityConverter" TriggerValue="True" />
    <conv:NullToUnsetValueConverter x:Key="NullToUnset" />
    <conv:RoundedRectConverter x:Key="RoundedRectConverter" />
    <conv:MenuButtonHighlightConverter x:Key="HighlightConverter" />
    
    <ContextMenu
        x:Key="DropDownButtonContextMenu"
        x:Shared="False"
        Placement="Bottom">
        <ContextMenu.Template>
            <ControlTemplate>
                <Border BorderBrush="{Binding PlacementTarget.BorderBrush, RelativeSource={RelativeSource AncestorType=ContextMenu}}" BorderThickness="{Binding PlacementTarget.BorderThickness, RelativeSource={RelativeSource AncestorType=ContextMenu}}">
                    <Border.Background>
                        <PriorityBinding>
                            <!--  override brush (only if not null)  -->
                            <Binding
                                Converter="{StaticResource NullToUnset}"
                                Path="PlacementTarget.DropDownBackground"
                                RelativeSource="{RelativeSource AncestorType=ContextMenu}" />
                            <!--  fall back to the button background  -->
                            <Binding Path="PlacementTarget.Background" RelativeSource="{RelativeSource AncestorType=ContextMenu}" />
                        </PriorityBinding>
                    </Border.Background>
                    <local:DropDownButtonContextMenu
                        x:Name="PART_DropDown"
                        Width="{Binding PlacementTarget.ActualWidth, RelativeSource={RelativeSource AncestorType=ContextMenu}}"
                        ItemTemplate="{Binding PlacementTarget.ItemTemplate, RelativeSource={RelativeSource AncestorType=ContextMenu}}"
                        Items="{Binding PlacementTarget.Items, RelativeSource={RelativeSource AncestorType=ContextMenu}}" />
                </Border>
            </ControlTemplate>
        </ContextMenu.Template>
    </ContextMenu>
    
    <Style TargetType="{x:Type buttons:HighlightButton}">
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type buttons:HighlightButton}">
                    <Border
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        ClipToBounds="True"
                        CornerRadius="6">
                        <Grid>
                            <Rectangle
                                Fill="{TemplateBinding HighlightBrush}"
                                Opacity="{TemplateBinding Highlighted, Converter={StaticResource HighlightConverter}}"
                                RadiusX="6"
                                RadiusY="6" />
                            <TextBlock
                                Padding="{TemplateBinding TextPadding}"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                FontFamily="{TemplateBinding FontFamily}"
                                FontSize="{TemplateBinding FontSize}"
                                Foreground="{TemplateBinding Foreground}"
                                Text="{TemplateBinding Title}"
                                TextAlignment="{TemplateBinding TextAlignment}"
                                TextWrapping="{TemplateBinding TextWrapping}" />
                            <ContentPresenter Content="{TemplateBinding ButtonContent}" />
                            <Rectangle
                                HorizontalAlignment="Stretch"
                                VerticalAlignment="Stretch"
                                Fill="{TemplateBinding DisabledBrush}"
                                Opacity="0.2"
                                RadiusX="6"
                                RadiusY="6"
                                Visibility="{TemplateBinding IsEnabled, Converter={StaticResource InverseBooleanToVisibilityConverter}}" />
                            <Rectangle
                                x:Name="PART_MouseHandler"
                                Fill="Transparent" />
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style TargetType="{x:Type local:DropDownButton}">
        <Setter Property="ContextMenu" Value="{StaticResource DropDownButtonContextMenu}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:DropDownButton}">
                    <Border
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        ClipToBounds="True"
                        CornerRadius="6"
                        SnapsToDevicePixels="True">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <buttons:HighlightButton
                                x:Name="PART_MainButton"
                                Grid.Column="0"
                                HorizontalAlignment="Stretch"
                                VerticalAlignment="Stretch"
                                HorizontalContentAlignment="Center"
                                VerticalContentAlignment="Center"
                                ClipToBounds="True"
                                Foreground="{DynamicResource MahApps.Brushes.ThemeForeground}"
                                HighlightBrush="{DynamicResource MahApps.Brushes.Accent}">
                                <buttons:HighlightButton.ButtonContent>
                                    <ContentControl Content="{TemplateBinding SelectedItem}" ContentTemplate="{TemplateBinding ItemTemplate}" />
                                </buttons:HighlightButton.ButtonContent>
                                <buttons:HighlightButton.Clip>
                                    <MultiBinding Converter="{StaticResource RoundedRectConverter}" ConverterParameter="6">
                                        <Binding Path="ActualWidth" RelativeSource="{RelativeSource Self}" />
                                        <Binding Path="ActualHeight" RelativeSource="{RelativeSource Self}" />
                                    </MultiBinding>
                                </buttons:HighlightButton.Clip>
                            </buttons:HighlightButton>
                            <buttons:HighlightButton
                                x:Name="PART_ArrowButton"
                                Grid.Column="1"
                                HorizontalAlignment="Stretch"
                                VerticalAlignment="Stretch"
                                ClipToBounds="True"
                                Foreground="{DynamicResource MahApps.Brushes.ThemeForeground}"
                                HighlightBrush="{DynamicResource MahApps.Brushes.Accent}">
                                <buttons:HighlightButton.ButtonContent>
                                    <glyphs:ArrowGlyph
                                        Width="30"
                                        Height="30"
                                        HorizontalAlignment="Center"
                                        VerticalAlignment="Center"
                                        Foreground="{DynamicResource MahApps.Brushes.ThemeForeground}"
                                        RenderTransformOrigin="0.5 0.5">
                                        <glyphs:ArrowGlyph.RenderTransform>
                                            <RotateTransform Angle="270" />
                                        </glyphs:ArrowGlyph.RenderTransform>
                                    </glyphs:ArrowGlyph>
                                </buttons:HighlightButton.ButtonContent>
                                <buttons:HighlightButton.Clip>
                                    <MultiBinding Converter="{StaticResource RoundedRectConverter}" ConverterParameter="6">
                                        <Binding Path="ActualWidth" RelativeSource="{RelativeSource Self}" />
                                        <Binding Path="ActualHeight" RelativeSource="{RelativeSource Self}" />
                                    </MultiBinding>
                                </buttons:HighlightButton.Clip>
                            </buttons:HighlightButton>
                            <Rectangle
                                HorizontalAlignment="Stretch"
                                VerticalAlignment="Stretch"
                                Fill="{Binding DisableBrush, RelativeSource={RelativeSource TemplatedParent}}"
                                Opacity="0.2"
                                RadiusX="6"
                                RadiusY="6"
                                Visibility="{Binding ClickEnabled, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource InverseBooleanToVisibilityConverter}}" />
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>
