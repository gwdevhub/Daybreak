<div class="navigation-menu">    
    <div class="menu-content">
        @foreach (var category in this.categories)
        {
            <div class="menu-category">
                <div class="category-header" @onclick="() => ToggleCategory(category.Name)">
                    <span class="category-title">@category.Name</span>
                    <span class="category-arrow @(this.expandedCategories.Contains(category.Name) ? "expanded" : "")">?</span>
                </div>
                
                @if (this.expandedCategories.Contains(category.Name))
                {
                    <div class="category-items">
                        @foreach (var button in category.Buttons)
                        {
                            <div class="menu-item" @onclick="() => ExecuteAction(button)">
                                <span class="item-title">@button.Name</span>
                                <span class="item-description">@button.Hint</span>
                            </div>
                        }
                    </div>
                }
            </div>
        }
    </div>
</div>

@code {
    private List<MenuCategory> categories = new();
    private HashSet<string> expandedCategories = new();

    [Inject]
    public required IMenuServiceProducer MenuServiceProducer { get; set; }
    [Inject]
    public required IMenuServiceButtonHandler MenuServiceButtonHandler { get; set; }

    protected override void OnInitialized()
    {
        this.LoadMenuCategories();
    }

    private void LoadMenuCategories()
    {
        this.categories = this.MenuServiceProducer.GetCategories().ToList();
    }

    private void ToggleCategory(string categoryName)
    {
        if (this.expandedCategories.Contains(categoryName))
        {
            this.expandedCategories.Remove(categoryName);
        }
        else
        {
            this.expandedCategories.Add(categoryName);
        }
    }

    private void ExecuteAction(MenuButton button)
    {
        this.MenuServiceButtonHandler.HandleButton(button);
    }
}